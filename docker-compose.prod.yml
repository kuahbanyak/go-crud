# Production Docker Compose Configuration
# Configured for Azure SQL Database (no local SQL Server needed)

version: '3.8'

services:
  # Go CRUD API Service
  go-crud-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"  # Changed to 8081 to avoid conflicts
    environment:
      - GIN_MODE=${GIN_MODE:-release}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CONFIG_ENV=${CONFIG_ENV:-prod}
      - SERVER_PORT=${SERVER_PORT:-8080}

      # Azure SQL Database Configuration
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_ENCRYPT=${DB_ENCRYPT:-true}
      - DB_TRUST_SERVER_CERTIFICATE=${DB_TRUST_SERVER_CERTIFICATE:-false}

      # Security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-24}

      # Redis Configuration
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
