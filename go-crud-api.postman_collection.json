{
  "info": {
    "name": "Go CRUD - Vehicle Service Management API (UUID-Based)",
    "description": "Complete API collection for Vehicle Service Management System with UUID identifiers for enhanced security and scalability",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "go-crud-vehicle-service-api-uuid",
    "version": {
      "major": 2,
      "minor": 0,
      "patch": 0
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "sample_user_id",
      "value": "550e8400-e29b-41d4-a716-446655440000",
      "type": "string"
    },
    {
      "key": "sample_vehicle_id",
      "value": "6ba7b810-9dad-11d1-80b4-00c04fd430c8",
      "type": "string"
    },
    {
      "key": "sample_booking_id",
      "value": "6ba7b811-9dad-11d1-80b4-00c04fd430c8",
      "type": "string"
    },
    {
      "key": "sample_template_id",
      "value": "123e4567-e89b-12d3-a456-426614174000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"customer\",\n  \"address\": \"123 Main St, City, State 12345\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (responseCode.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('User registered with UUID:', jsonData.id);",
                  "    pm.environment.set('sample_user_id', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('jwt_token', jsonData.token);",
                  "    pm.globals.set('jwt_token', jsonData.token);",
                  "    console.log('JWT Token set successfully');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/me",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "me"]
            }
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Updated\",\n  \"phone\": \"+1234567899\",\n  \"address\": \"456 Updated Ave, New City, State 54321\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/me",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "Vehicle Management",
      "item": [
        {
          "name": "Get All Vehicles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/vehicles",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "vehicles"]
            }
          }
        },
        {
          "name": "Create Vehicle",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"brand\": \"Toyota\",\n  \"model\": \"Camry\",\n  \"year\": 2020,\n  \"license_plate\": \"ABC123\",\n  \"vin\": \"1234567890ABCDEF\",\n  \"mileage\": 25000\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/vehicles",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "vehicles"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (responseCode.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Vehicle created with UUID:', jsonData.id);",
                  "    pm.environment.set('sample_vehicle_id', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Vehicle by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/vehicles/{{sample_vehicle_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "vehicles", "{{sample_vehicle_id}}"]
            }
          }
        },
        {
          "name": "Update Vehicle",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mileage\": 26000\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/vehicles/{{sample_vehicle_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "vehicles", "{{sample_vehicle_id}}"]
            }
          }
        },
        {
          "name": "Delete Vehicle",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/api/v1/vehicles/{{sample_vehicle_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "vehicles", "{{sample_vehicle_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Booking Management",
      "item": [
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"scheduled_at\": \"2025-09-01T10:00:00Z\",\n  \"duration_min\": 60,\n  \"notes\": \"Regular oil change service\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/bookings",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "bookings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (responseCode.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Booking created with UUID:', jsonData.id);",
                  "    pm.environment.set('sample_booking_id', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Bookings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/bookings",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "bookings"]
            }
          }
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/bookings/{{sample_booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "bookings", "{{sample_booking_id}}"]
            }
          }
        },
        {
          "name": "Update Booking Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/bookings/{{sample_booking_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "bookings", "{{sample_booking_id}}", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "Service Records",
      "item": [
        {
          "name": "Create Service Record",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"booking_id\": \"{{sample_booking_id}}\",\n  \"description\": \"Changed oil and filter\",\n  \"cost\": 4999\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/service-records",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "service-records"]
            }
          }
        },
        {
          "name": "Get All Service Records",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/service-records",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "service-records"]
            }
          }
        }
      ]
    },
    {
      "name": "Inventory Management",
      "item": [
        {
          "name": "Get All Parts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/parts",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "parts"]
            }
          }
        },
        {
          "name": "Create Part",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sku\": \"OF-123\",\n  \"name\": \"Oil Filter\",\n  \"qty\": 50,\n  \"price\": 1599\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/parts",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "parts"]
            }
          }
        },
        {
          "name": "Update Part",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qty\": 45,\n  \"price\": 1699\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/parts/:part_id",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "parts", ":part_id"],
              "variable": [
                {
                  "key": "part_id",
                  "value": "{{sample_part_id}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Invoice & Reports",
      "item": [
        {
          "name": "Generate Invoice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"booking_id\": \"{{sample_booking_id}}\",\n  \"amount\": 12500,\n  \"customer_email\": \"customer@example.com\",\n  \"description\": \"Oil change and filter replacement service\",\n  \"template_id\": \"{{sample_template_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/generate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "generate"]
            }
          }
        },
        {
          "name": "Get Reports Summary",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/reports/summary",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "reports", "summary"]
            }
          }
        }
      ]
    },
    {
      "name": "Custom Invoice Templates",
      "item": [
        {
          "name": "Create Custom Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Professional Invoice Template\",\n  \"subject\": \"Invoice #{{invoice_id}} - Service Complete\",\n  \"body\": \"<html><body><h1>Vehicle Service Invoice</h1><h2>Invoice #{{invoice_id}}</h2><p>Dear Customer,</p><p>Your vehicle service for booking #{{booking_id}} has been completed.</p><div style='border:1px solid #ccc;padding:10px;margin:10px 0;'><strong>Invoice Details:</strong><br>Amount: {{amount}}<br>Status: {{status}}<br>Description: {{description}}<br>Date: {{created_at}}</div><p>Thank you for choosing our service!</p></body></html>\",\n  \"body_type\": \"html\",\n  \"is_default\": true,\n  \"description\": \"Professional HTML template with styling\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (responseCode.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Template created with UUID:', jsonData.id);",
                  "    pm.environment.set('sample_template_id', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Templates",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates"]
            }
          }
        },
        {
          "name": "Get Template by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates/{{sample_template_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates", "{{sample_template_id}}"]
            }
          }
        },
        {
          "name": "Update Template",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Professional Template\",\n  \"subject\": \"Updated: Invoice #{{invoice_id}} - {{description}}\",\n  \"body\": \"<html><body><h1>UPDATED Template</h1><h2>Invoice #{{invoice_id}}</h2><p>This template has been updated!</p><p>Amount: {{amount}} | Status: {{status}}</p></body></html>\",\n  \"body_type\": \"html\",\n  \"is_default\": true,\n  \"description\": \"Updated professional template\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates/{{sample_template_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates", "{{sample_template_id}}"]
            }
          }
        },
        {
          "name": "Set Default Template",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates/{{sample_template_id}}/set-default",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates", "{{sample_template_id}}", "set-default"]
            }
          }
        },
        {
          "name": "Delete Template",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates/{{sample_template_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates", "{{sample_template_id}}"]
            }
          }
        },
        {
          "name": "Create Simple Text Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Simple Text Template\",\n  \"subject\": \"Invoice {{invoice_id}} - {{description}}\",\n  \"body\": \"Dear Customer,\\n\\nYour invoice has been generated:\\n\\nInvoice ID: {{invoice_id}}\\nBooking ID: {{booking_id}}\\nAmount: {{amount}}\\nStatus: {{status}}\\nDescription: {{description}}\\nDate: {{created_at}}\\n\\nThank you for your business!\\n\\nBest regards,\\nVehicle Service Team\",\n  \"body_type\": \"text\",\n  \"is_default\": false,\n  \"description\": \"Simple plain text template\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/invoices/templates",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "invoices", "templates"]
            }
          }
        }
      ]
    },
    {
      "name": "Real-time Communications",
      "item": [
        {
          "name": "WebSocket Connection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/ws",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ws"]
            }
          }
        },
        {
          "name": "Create Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"booking_id\": \"{{sample_booking_id}}\",\n  \"receiver_id\": \"{{sample_user_id}}\",\n  \"type\": \"text\",\n  \"content\": \"Your vehicle service is ready for pickup\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/messages",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "messages"]
            }
          }
        },
        {
          "name": "Get Messages by Booking",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/messages/booking/{{sample_booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "messages", "booking", "{{sample_booking_id}}"]
            }
          }
        },
        {
          "name": "Get Conversation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/messages/conversation/{{sample_booking_id}}/{{sample_user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "messages", "conversation", "{{sample_booking_id}}", "{{sample_user_id}}"]
            }
          }
        },
        {
          "name": "Mark Message as Read",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{base_url}}/api/v1/messages/:message_id/read",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "messages", ":message_id", "read"],
              "variable": [
                {
                  "key": "message_id",
                  "value": "{{sample_message_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/messages/unread-count",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "messages", "unread-count"]
            }
          }
        }
      ]
    },
    {
      "name": "Scheduling & Calendar",
      "item": [
        {
          "name": "Create Mechanic Availability",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mechanic_id\": \"{{sample_user_id}}\",\n  \"date\": \"2025-09-01\",\n  \"start_time\": \"2025-09-01T09:00:00Z\",\n  \"end_time\": \"2025-09-01T17:00:00Z\",\n  \"status\": \"available\",\n  \"notes\": \"Available for regular services\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/availability",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "availability"]
            }
          }
        },
        {
          "name": "Get Mechanic Availability",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/availability/mechanic/{{sample_user_id}}?date=2025-09-01",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "availability", "mechanic", "{{sample_user_id}}"],
              "query": [
                {
                  "key": "date",
                  "value": "2025-09-01"
                }
              ]
            }
          }
        },
        {
          "name": "Create Service Type",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Oil Change\",\n  \"description\": \"Regular oil and filter change\",\n  \"estimated_minutes\": 60,\n  \"base_price\": 4999,\n  \"category\": \"Maintenance\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/service-types",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "service-types"]
            }
          }
        },
        {
          "name": "Get Service Types",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/service-types",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "service-types"]
            }
          }
        },
        {
          "name": "Create Maintenance Reminder",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"service_type_id\": \"{{sample_service_type_id}}\",\n  \"due_date\": \"2025-12-01T00:00:00Z\",\n  \"due_mileage\": 30000,\n  \"description\": \"Next oil change due\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/reminders",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "reminders"]
            }
          }
        },
        {
          "name": "Get Vehicle Reminders",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/reminders/vehicle/{{sample_vehicle_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "reminders", "vehicle", "{{sample_vehicle_id}}"]
            }
          }
        },
        {
          "name": "Get Due Reminders",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/reminders/due",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "reminders", "due"]
            }
          }
        },
        {
          "name": "Add to Waitlist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"service_type_id\": \"{{sample_service_type_id}}\",\n  \"preferred_date\": \"2025-09-05T10:00:00Z\",\n  \"notes\": \"Brake pads need replacement\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/scheduling/waitlist",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "scheduling", "waitlist"]
            }
          }
        }
      ]
    },
    {
      "name": "Service Packages",
      "item": [
        {
          "name": "Create Service Package",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Basic Maintenance Package\",\n  \"description\": \"Oil change, filter replacement, and basic inspection\",\n  \"total_price\": 7999,\n  \"discount_pct\": 10,\n  \"category\": \"Preventive Maintenance\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/packages",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages"]
            }
          }
        },
        {
          "name": "Get All Packages",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/packages",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages"]
            }
          }
        },
        {
          "name": "Get Package by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/packages/{{sample_package_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages", "{{sample_package_id}}"]
            }
          }
        },
        {
          "name": "Create Service Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Preventive Maintenance\",\n  \"description\": \"Regular maintenance services to prevent major issues\",\n  \"icon\": \"maintenance-icon\",\n  \"color\": \"#007bff\",\n  \"sort_order\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/packages/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages", "categories"]
            }
          }
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/packages/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages", "categories"]
            }
          }
        },
        {
          "name": "Create Service History",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"booking_id\": \"{{sample_booking_id}}\",\n  \"package_id\": \"{{sample_package_id}}\",\n  \"mechanic_id\": \"{{sample_user_id}}\",\n  \"completed_at\": \"2025-08-28T10:00:00Z\",\n  \"cost\": 7999,\n  \"mileage\": 25000,\n  \"notes\": \"Service completed successfully\",\n  \"quality_rating\": 5,\n  \"customer_review\": \"Excellent service, very satisfied\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/packages/history",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages", "history"]
            }
          }
        },
        {
          "name": "Get Vehicle Service History",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/packages/history/vehicle/{{sample_vehicle_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "packages", "history", "vehicle", "{{sample_vehicle_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Customer Dashboard",
      "item": [
        {
          "name": "Get Customer Dashboard",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/dashboard/customer",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "dashboard", "customer"]
            }
          }
        },
        {
          "name": "Get Vehicle Dashboard",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/dashboard/vehicle/{{sample_vehicle_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "dashboard", "vehicle", "{{sample_vehicle_id}}"]
            }
          }
        },
        {
          "name": "Update Vehicle Health",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"overall_score\": 85,\n  \"engine_score\": 90,\n  \"brake_score\": 80,\n  \"tire_score\": 85,\n  \"battery_score\": 75,\n  \"last_updated\": \"2025-08-28T10:00:00Z\",\n  \"recommendations\": \"Consider brake pad replacement soon\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/dashboard/vehicle-health",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "dashboard", "vehicle-health"]
            }
          }
        },
        {
          "name": "Create Recommendation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"title\": \"Brake Pad Replacement\",\n  \"description\": \"Brake pads are getting thin and should be replaced soon\",\n  \"priority\": \"medium\",\n  \"estimated_cost\": 29999,\n  \"due_in_days\": 30,\n  \"category\": \"Safety\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/dashboard/recommendations",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "dashboard", "recommendations"]
            }
          }
        },
        {
          "name": "Update Budget",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicle_id\": \"{{sample_vehicle_id}}\",\n  \"monthly_budget\": 20000,\n  \"yearly_budget\": 200000,\n  \"alert_threshold\": 80\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/dashboard/budget",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "dashboard", "budget"]
            }
          }
        }
      ]
    }
  ]
}
